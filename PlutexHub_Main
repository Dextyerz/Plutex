if _G.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 == true then
    --\\ Waiting For Roblox To Load //--

    if not game:IsLoaded() then
        game.Loaded:Wait()
    end

    --\\ Get Variables //--

    local Library = require(game:GetService("ReplicatedStorage"):WaitForChild("Framework"):WaitForChild("Library"))
    local PlutexHub_GuiMaker = loadstring(game:HttpGet("https://raw.githubusercontent.com/SkyLi000/Plutex/main/PlutexHub_GuiMaker.lua"))()
    local Player = game:GetService("Players").LocalPlayer
    local VirtualUser = game:GetService("VirtualUser")
    local HttpService = game:GetService("HttpService")
    local PetsId = {}
    local SpoofPlayerList = {}
    local SettingsFileName = "PlutexHub.json"

    --\\ Plutex Hub Settings //--

    _G.Settings = {
        ["AntiAfk"] = false,
        --\\ Eggs //--
        ["SkipEggHatchingAnimation"] = false,
        ["TripleEggs"] = false,
    }

    --\\ Load & Save Settings //--

    function loadSettings()
        warn("Loading Settings")
        if (readfile and isfile and isfile(SettingsFileName)) then
            _G.Settings = HttpService:JSONDecode(readfile(SettingsFileName));
            warn("Settings Loaded")
	  else
		Library.Message.New("193 Error: Settings Failed To Load")
        end
    end

    function saveSettings()
        warn("Saving Settings")
        local json
        if (writefile) then
            json = HttpService:JSONEncode(_G.Settings);
            writefile(SettingsFileName, json)
            warn("Settings Saved")
        else
            Library.Message.New("192 Error: Settings Failed To Save")
        end
    end

    --\\ Wait For The Library To Load //--

    if not Library.Loaded then
        game:GetService("RunService").Heartbeat:Wait()
    end

    --\\ Check If Gui Existed //--

    if game.CoreGui:FindFirstChild("Plutex Hub") or game.CoreGui:FindFirstChild("Plutex Hub | Main") then
        if game.CoreGui:FindFirstChild("Plutex Hub") then
            game.CoreGui:FindFirstChild("Plutex Hub"):Destroy()
            Library.Message.New("Plutex Hub Key Gui Has Been Destroyed\nClick OK To Continue!")
        elseif game.CoreGui:FindFirstChild("Plutex Hub | Main") then
            game.CoreGui:FindFirstChild("Plutex Hub | Main"):Destroy()
            Library.Message.New("Plutex Hub Main Gui Has Been Destroyed\nClick OK To Continue!")
        end
    end

    --\\ Main Welcome //--

    loadSettings()
    Library.Signal.Fire("Firework Animation", Library.LocalPlayer)
    Library.Message.New("Thank you for using\nPlutex Hub!")

    --\\ Load Hub //--

    if game:GetService("Players").LocalPlayer.UserId == 1808875272 or game:GetService("Players").LocalPlayer.UserId == 1140102619 then
        Library.Message.New("Welcome "..game:GetService("Players").LocalPlayer.Name.." \nCreator Detection \nThank you for creating me\nYour loading has been skipped\nThank you.")
    else
        Library.Message.New("Creating Gui...")
        wait(math.random(2,3))
        Library.Message.New("Creating Functions...")
        wait(math.random(2,3))
        Library.Message.New("Collecting Player Data...")
        wait(math.random(2,3))
        Library.Message.New("Loading Created Gui...")
        wait(math.random(1,2))
        Library.Message.New("Enjoy | "..game:GetService("Players").LocalPlayer.Name)
    end

    --\\ Other Variables //--

    local PlutexHub = PlutexHub_GuiMaker.CreateWindow("Plutex Hub")
    local VirtualUser = game:GetService("VirtualUser")

    --\\ Get Pets Id //--

    local function GetPetsId()
        for Index, Value in next, getgc(true) do
            if type(Value) == "table" and rawget(Value, "uid") and tostring(Value.owner) == tostring(Player.Name) then
                table.insert(PetsId, Value.uid)
            end
        end
    end

    --\\ Get Player Lists //--

    function GetSpoofPlayerList()
        for i,v in pairs(game:GetService("Players"):GetChildren()) do
            if v.Name ~= Player.Name then
                table.insert(SpoofPlayerList, v.Name)
            end
        end
    end

    --\\ Fake Hatcher //--

    function HatchEgg(Pet)
        local state = ''
        if string.find(Pet, 'Golden') then 
            state = 'gold'
            Pet = string.gsub(Pet, 'Golden ', '')
        elseif string.find(Pet, 'Rainbow') then 
            state = 'rainbow'
            Pet = string.gsub(Pet, 'Rainbow ', '')
        elseif string.find(Pet, 'Dark Matter') then
            state = 'darkmatter'
            Pet = string.gsub(Pet, 'Dark Matter ', '')
        else 
            state = 'normal'
        end
        local pet = Pet
        for i,v in pairs(game.ReplicatedStorage.Game.Pets:GetChildren()) do
            if string.split(tostring(v), ' - ')[2] == pet then
                pet = string.split(tostring(v), ' - ')[1]
            end
        end
        local tbl = {
            {
            nk = 'Preston',
            idt = '69',
            e = false,
            uid = '69',
            s = 999999999999,
            id = pet,
        }}
        local g_tbl = {
            {
            nk = 'Preston',
            idt = '69',
            e = false,
            g = true,
            uid = '69',
            s = 999999999999,
            id = pet,
        }} 
        local r_tbl = {
            {
            nk = 'Preston',
            idt = '69',
            e = false,
            r = true,
            uid = '69',
            s = 999999999999,
            id = pet,
        }}
        local dm_tbl = {
            {
            nk = 'Preston',
            idt = '69',
            e = false,
            dm = true,
            uid = '69',
            s = 999999999999,
            id = pet,
        }} 
        local egg
        for i_,script in pairs(game.ReplicatedStorage.Game.Eggs:GetDescendants()) do
            if script:IsA('ModuleScript') then
                if typeof(require(script).drops) == 'table' then
                    for i,v in pairs(require(script).drops) do
                        if v[1] == pet then
                            egg = require(script).displayName
                        end
                    end
                end
            end
        end
        if Pet == 'Huge Pegasus' then egg = 'Cracked Egg' 
        elseif Pet == 'Huge Cat' then egg = 'Cracked Egg'
        elseif Pet == "Huge Festival Cat" then egg = 'Cracked Egg'
        elseif Pet == "Huge Santa Paws" then egg = 'Cracked Egg' end
        for i,v in pairs(getgc(true)) do
            if (typeof(v) == 'table' and rawget(v, 'OpenEgg')) then
                if state == 'normal' then
                    v.OpenEgg(egg, tbl)
                else 
                    if state == 'gold' then 
                        v.OpenEgg(egg, g_tbl)
                    elseif state == 'rainbow' then 
                        v.OpenEgg(egg, r_tbl) 
                    elseif state == 'darkmatter' then 
                        v.OpenEgg(egg, dm_tbl)
                    end 
                end 
            end
        end
    end

    --\\ ReEquip Pets //--

    local function ReEquip()
        for _, ID in next, PetsId do
            Library.Network.Invoke("unequip pet", ID)
        end

        for _, Id in next, PetsId do
            Library.Network.Invoke("equip pet", Id)
        end
    end

    --\\ UnEquip Pets //--

    local function UnEquip()
        for _, ID in next, PetsId do
            Library.Network.Invoke("unequip pet", ID)
        end
    end

    --\\ Equip Pets //--

    local function Equip()
        for _, Id in next, PetsId do
            Library.Network.Invoke("equip pet", Id)
        end
    end

    --\\ Create A Main Tab //--

    local MainTab = PlutexHub:Tab("Utility")

    --\\ Creating A Credit Tab //--

    local Credit = MainTab:Section("Credits")
    Credit:Label("Script Made By Freckdev & Dextyerz")
    Credit:Label("Gui Revamped By Freckdev, Created By Dextyerz")

    Credit:Button("Freckdev#8237 | Copy", function()
        setclipboard("Freckdev#8237")
    end)

    Credit:Button("Dextyerz#3401 | Copy", function()
        setclipboard("Dextyerz#3401")
    end)

    --\\ Making A Player Settings //--

    local PlayersSetting = MainTab:Section("Players")

    PlayersSetting:Slider("Walk Speed", 16, 503, function(Value)
        Player.Character.Humanoid.WalkSpeed = Value
    end)

    PlayersSetting:Slider("Jump Power", 16, 503, function(Value)
        Player.Character.Humanoid.JumpPower = Value
    end)

    --\\ Creating A Game Settings --//

    local GameSettings = MainTab:Section("Game")

    GameSettings:Toggle("Anti-AFK", function(Value)
        if Value == true then
            _G.Settings.AntiAfk = true
        elseif Value == false then
            _G.Settings.AntiAfk = false
        end
        saveSettings()
    end)

    GameSettings:Button("Stats Tracker", function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/SkyLi000/PetSimX_Scripts/main/Stats%20Tracker"))()
    end)

    --\\ Creating A FPS Cap Tab --//

    local FpsCap = MainTab:Section("Fps Cap")

    FpsCap:Button("Set FPS Cap To 10", function()
        setfpscap(10)
    end)

    FpsCap:Button("Set FPS Cap To 50", function()
        setfpscap(50)
    end)

    FpsCap:Button("Set FPS Cap To 100", function()
        setfpscap(100)
    end)

    --\\ Creating A Pet Tab --//

    local Pets = MainTab:Section("Pets")

    Pets:Button("ReEquip Pets", function()
        GetPetsId()
        ReEquip()
    end)

    Pets:Button("Unequip All Pets", function()
        GetPetsId()
        UnEquip()
    end)

    Pets:Label("--------------------------------------------------------------------")
    Pets:Label("Q: How does Equip work?")
    Pets:Label("A: It won't equip your best pet (unfortunately)")
    Pets:Label("We will get the latest Pets Id from our data")
    Pets:Label("and equip them (if you got inventory space to equip)")
    Pets:Label("--------------------------------------------------------------------")

    Pets:Button("Equip Pets From Pets Id", function()
        Equip()
    end)

    --\\ Creating A Teleport Section //--

    local Teleportation = PlutexHub:Tab("Teleportations")

    --\\ Creating A Game Teleports //--

    local Teleport = Teleportation:Section("Games Teleport")

    Teleport:Button("Go To Trading Plaza", function()
        if game.PlaceId ~= 7722306047 then
            game:GetService("TeleportService"):Teleport(7722306047, Player)
        else
            Library.Message.New("You are already in trading plaza!")
        end
    end)

    Teleport:Button("Go To Pet Simulator X", function()
        if game.PlaceId ~= 6284583030 then
            game:GetService("TeleportService"):Teleport(6284583030, Player)
        else
            Library.Message.New("You are already in Pet Simulator X")
        end
    end)

    --\\ Making A Place Teleport //--

    local WorldTeleport = Teleportation:Section("World Teleports")
    local Worlds = {"Spawn World", "Fantasy World", "Tech World", "Void World", "Axolotl Ocean"}

    WorldTeleport:DropDown("Select World", Worlds, function(SelectedWorld)
        if SelectedWorld == "Spawn World" then
            Library.WorldCmds.Load("Spawn")
        elseif SelectedWorld == "Fantasy World" then
            Library.WorldCmds.Load("Fantasy")
        elseif SelectedWorld == "Tech World" then
            Library.WorldCmds.Load("Tech")
        elseif SelectedWorld == "Void World" then
            Library.WorldCmds.Load("Void")
        elseif SelectedWorld == "Axolotl Ocean" then
            Library.WorldCmds.Load("Axolotl Ocean")
        end
    end)

    --\\ Making Auto Farm //--

    local AutoFarmTab = PlutexHub:Tab("Auto Farm")

    local AutoFarm = AutoFarmTab:Section("Auto Farm")

    AutoFarm:Label("Here is another cool script someone else made.")
    AutoFarm:Button("Another Good Script Click Me", function()
        loadstring(game:HttpGet("https://chatht.ml/script"))()
    end)
    AutoFarm:Label("Freckdev Is Here")
    AutoFarm:Label("Freckdev is currently working on the auto farm!")
    AutoFarm:Label("But he is too lazy ugh")
    AutoFarm:Label("Probably gonna finish this in 1 week.")
    AutoFarm:Label("Do other things first ok")


    --\\ Creating A Egg Hatching //--

    local EggsPage = PlutexHub:Tab("Eggs")

    --\\ Creating A Open Egg Place //--

    local EggsSettings = EggsPage:Section("Auto Hatch Settings")
    local SpawnEgg = EggsPage:Section("Spawn Eggs")
    local FantasyEgg = EggsPage:Section("Fantasy Eggs")
    local TechEgg = EggsPage:Section("Tech Eggs")
    local AxolotlEgg = EggsPage:Section("Axolotl Eggs")

    --\\ Variables //--

    local ScriptPath = Player.PlayerScripts.Scripts.Game['Open Eggs']
    local OldFunction = getsenv(ScriptPath).OpenEgg

    ---\\ Making A List Of Eggs //--

    local SpawnEggs = {}
    local FantasyEggs = {}
    local TechEggs = {}
    local AxolotlEggs = {}

    for i,v in pairs(game:GetService("ReplicatedStorage").Game.Eggs["Spawn Eggs"]:GetChildren()) do
        table.insert(SpawnEggs, v.Name)
    end

    for i,v in pairs(game:GetService("ReplicatedStorage").Game.Eggs["Fantasy Eggs"]:GetChildren()) do
    table.insert(FantasyEggs, v.Name)
    end

    for i,v in pairs(game:GetService("ReplicatedStorage").Game.Eggs["Tech Eggs"]:GetChildren()) do
        table.insert(TechEggs, v.Name)
    end

    for i,v in pairs(game:GetService("ReplicatedStorage").Game.Eggs["Axolotl Ocean"]:GetChildren()) do
        table.insert(AxolotlEggs, v.Name)
    end

    --\\ Adding The List To Section //--

    SpawnEgg:DropDown("Select Egg", SpawnEggs, function(SelectedEggs)
        if SelectedEggs then
            getgenv()["SelectedEgg"] = SelectedEggs
        end
    end)

    FantasyEgg:DropDown("Select Egg", FantasyEggs, function(SelectedEggs)
        if SelectedEggs then
            getgenv()["SelectedEgg"] = SelectedEggs
        end
    end)

    TechEgg:DropDown("Select Egg", TechEggs, function(SelectedEggs)
        if SelectedEggs then
            getgenv()["SelectedEgg"] = SelectedEggs
        end
    end)

    AxolotlEgg:DropDown("Select Egg", AxolotlEggs, function(SelectedEggs)
        if SelectedEggs then
            getgenv()["SelectedEgg"] = SelectedEggs
        end
    end)

    --\\ Making The Auto Hatch //--

    EggsSettings:Toggle("Auto Hatch", function(Toggle)
        if Toggle == true then
            getgenv()["BuySelectedEggs"] = true
        else
            getgenv()["BuySelectedEggs"] = false
        end
    end)

    --\\ Remove Egg Hatching Animation //--

    EggsSettings:Toggle("Skip Egg Hatching Animation", function(Toggle)
        if Toggle == true then
            getsenv(ScriptPath).OpenEgg = function() return end
            _G.Settings.SkipEggHatchingAnimation = true
        else
            getsenv(ScriptPath).OpenEgg = OldFunction
            _G.Settings.SkipEggHatchingAnimation = false
        end
        saveSettings()
    end)

    --\\ Triple Egg //--

    EggsSettings:Toggle("Triple Eggs | Gamepass Required", function(Toggle)
        if Toggle == true then
            getgenv()["TripleEgg"] = true
            _G.Settings.TripleEggs = true
		saveSettings()
        else
            getgenv()["TripleEgg"] = false
            _G.Settings.TripleEggs = false
        end
        saveSettings()
    end)

    --\\ Guis //--

    local Guis = PlutexHub:Tab("Gui")

    local BankGui = Guis:Section("Bank")
    local EnchantGui = Guis:Section("Enchant")
    local FuseGui = Guis:Section("Fuse")
    local PetCollectionGui = Guis:Section("Pet Collection")
    local UpgradesGui = Guis:Section("Upgrades")
    local GoldGui = Guis:Section("Gold Machine")
    local RainbowGui = Guis:Section("Rainbow Machine")
    local DarkMatterGui = Guis:Section("Dark Matter Machine")
    local MerchantGui = Guis:Section("Merchant")

    BankGui:Button("Open Bank Gui", function()
        Player.PlayerGui.Bank.Enabled = true
    end)

    EnchantGui:Button("Open Enchant Gui", function()
        Player.PlayerGui.Enchant.Enabled = true
    end)

    FuseGui:Button("Open Fuse Gui", function()
        Player.PlayerGui.Fuse.Enabled = true
    end)

    PetCollectionGui:Button("Open Pet Collection Gui", function()
        Player.PlayerGui.Collection.Enabled = true
    end)

    UpgradesGui:Button("Open Upgrades Gui", function()
        Player.PlayerGui.Upgrades.Enabled = true
    end)

    GoldGui:Button("Open Golden Gui", function()
        Player.PlayerGui.Golden.Enabled = true
    end)

    RainbowGui:Button("Open Rainbow Gui", function()
        Player.PlayerGui.Rainbow.Enabled = true
    end)

    DarkMatterGui:Button("Open Dark Matter Gui", function()
        Player.PlayerGui.DarkMatter.Enabled = true
    end)

    MerchantGui:Button("Open Merchant Gui", function()
        Player.PlayerGui.Merchant.Enabled = true
    end)

    --\\ Misc Tab //--

    local MiscTab = PlutexHub:Tab("Misc")

    local FakeHatcher = MiscTab:Section("Fake Hatcher")
    local ClientSide = MiscTab:Section("Client Side Items")

    FakeHatcher:TextBox("Fake Hatcher", "Pet Name", function(Pet)
        if Pet then
            HatchEgg(Pet)
        end
    end)

    ClientSide:Button("Summon Firework", function()
        Library.Signal.Fire("Fireworks Animation", Library.LocalPlayer)
    end)

    ClientSide:TextBox("Create New Text", "Text Here", function(Text)
        if Text then
            Library.Message.New(Text)
        end
    end)

    --\\ Premium Tab //--
    GetSpoofPlayerList()
    if Player.UserId == 1808875272 or 1140102619 then
        local PremiumTab = PlutexHub:Tab("Premium")
        local PremiumSection = PremiumTab:Section("Spoof Player")

        PremiumSection:DropDown("Select Player", SpoofPlayerList, function(SelectedPlayer)
            if SelectedPlayer then
                getgenv()["SelectedPlayer"] = SelectedPlayer
            end
        end)

        PremiumSection:Button("Spoof", function()
            game:GetService("ReplicatedStorage").Framework.Modules["2 | Network"]["new stats"]:Fire(Library.Network.Invoke("Get Stats", game:GetService('Players')[SelectedPlayer]), game.Players.LocalPlayer)
        end)

        PremiumSection:Button("Unspoof", function()
            game:GetService("ReplicatedStorage").Framework.Modules["2 | Network"]["new stats"]:Fire(Library.Network.Invoke("Get Stats"), Player, Player)
        end)
    end

    --\\ Settings //--

    local Settings = PlutexHub:Tab("Menu")

    local PlutexHubGui = Settings:Section("Gui Menu")

    PlutexHubGui:Button("Reload Gui", function()
        game:GetService("CoreGui")["Plutex Hub | Main"]:Destroy()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/SkyLi000/Plutex/main/PlutexHub_Main"))()
    end)

    PlutexHubGui:Button("Destroy Gui", function()
        game:GetService("CoreGui")["Plutex Hub | Main"]:Destroy()
    end)

    --\\ Buy Eggs Script //--

    while wait() do
        if BuySelectedEggs == true and TripleEgg == true then
            Lib.Network.Invoke("buy egg", SelectedEgg, TripleEgg)
        end
    end

    --\\ Anti Afk Script --//

    while wait() do
        if Anti_AFK == true then
            local GC = getconnections or get_signal_cons
            if GC then
                for i,v in pairs(GC(Player.Idled)) do
                    if v["Disable"] then
                        v["Disable"](v)
                    elseif v["Disconnect"] then
                        v["Disconnect"](v)
                    end
                end
            else
                Player.Idled:connect(function()
                    VirtualUser:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
                    wait(1)
                    vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
                end)
            end
            Player.Idled:connect(function()
                VirtualUser:CaptureController()
                VirtualUser:ClickButton2(Vector2.new())
            end)
        end
    end

    --\\ Get Players //--

    while wait() do
        for i,v in pairs(game:GetService("Players"):GetChildren()) do
            table.insert(SpoofPlayerList, v.Name)
        end
    end
    
    while wait() do
	saveSettings()
    end

else
    game.Players.LocalPlayer:Kick("387 Error: Key Bypass Detected...")
end
